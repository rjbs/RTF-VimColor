#!/usr/bin/perl
use strict;
use warnings;
# PODNAME: synrtf
# ABSTRACT: generate colorized RTF using Vim's syntax highlighting

use Getopt::Long::Descriptive;
use RTF::VimColor;

=head1 USAGE

  synrtf [-cFfhZ] [long options...] <filename>

    -h --help            display this message
    -f --ft --filetype   filetype; Vim guesses by default
    -F --font-face       font face to use; defaults to Courier New
    -Z --font-size       font size to use, in points; defaults to 14
    -c --colorscheme     color scheme; path to a .vim file
    --bg --background    default background color
    --fg --foreground    default foreground color

=cut

my ($opt, $usage) = describe_options(
  '%c %o <filename>',
  [ 'help|h',          'display this message' ],
  [ 'filetype|ft|f=s', 'filetype; Vim guesses by default' ],
  [ 'font-face|F=s',   'font face to use; defaults to Courier New',
                       { default => 'Courier New' } ],
  [ 'font-size|Z=i',   'font size to use, in points; defaults to 14',
                       { default => 14 } ],
  [ 'colorscheme|c=s', 'color scheme; path to a .vim file' ],

  [ 'background|bg=s', 'default background color' ],
  [ 'foreground|fg=s', 'default foreground color' ],
);

$usage->die if $opt->{help} or @ARGV != 1;

sub maybe { return($opt->{$_[0]} ? (($_[1] || $_[0]) => $opt->{$_[0]}) : ()) }

my $rtf = RTF::VimColor->new->rtf_for_file(
  $ARGV[0],
  {
    filetype  => $opt->filetype,
    font_face => $opt->font_face,
    font_size => $opt->font_size,
    maybe('colorscheme'),
    maybe('background', 'default_bg'),
    maybe('foreground', 'default_fg'),
  },
);

print $$rtf;
